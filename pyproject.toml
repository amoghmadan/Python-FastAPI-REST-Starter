[build-system]
requires = ["setuptools", "setuptools_scm", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "app"
dynamic = ["version"]
description = "A starter project for a REST API using FastAPI"
readme = "README.md"
authors = [{ name = "Amogh Madan", email = "amoghmadaan@gmail.com" }]
license = { file = "LICENSE" }
requires-python = ">=3.12,<3.14"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Framework :: FastAPI",
    "Framework :: FastAPI :: 0.112.2",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: ASGI",
]
dependencies = [
    "alembic==1.13.2",
    "annotated-types==0.7.0",
    "anyio==4.4.0",
    "certifi==2024.7.4",
    "click==8.1.7",
    "dnspython==2.6.1",
    "email_validator==2.2.0",
    "fastapi==0.112.2",
    "fastapi-cli==0.0.5",
    "greenlet==3.0.3",
    "h11==0.14.0",
    "httpcore==1.0.5",
    "httptools==0.6.1",
    "httpx==0.27.0",
    "idna==3.8",
    "Jinja2==3.1.4",
    "Mako==1.3.5",
    "markdown-it-py==3.0.0",
    "MarkupSafe==2.1.5",
    "mdurl==0.1.2",
    "pydantic==2.8.2",
    "pydantic_core==2.20.1",
    "Pygments==2.18.0",
    "python-dotenv==1.0.1",
    "python-multipart==0.0.9",
    "PyYAML==6.0.2",
    "rich==13.7.1",
    "shellingham==1.5.4",
    "sniffio==1.3.1",
    "SQLAlchemy==2.0.32",
    "starlette==0.38.2",
    "typer==0.12.5",
    "typing_extensions==4.12.2",
    "uvicorn==0.30.6",
    "uvloop==0.20.0",
    "watchfiles==0.23.0",
    "websockets==13.0",
]

[project.optional-dependencies]
automation = [
    "cachetools==5.5.0",
    "chardet==5.2.0",
    "colorama==0.4.6",
    "distlib==0.3.8",
    "filelock==3.15.4",
    "packaging==24.1",
    "platformdirs==4.2.2",
    "pluggy==1.5.0",
    "pyproject-api==1.7.1",
    "tox==4.18.0",
    "virtualenv==20.26.3",
]
deployment = ["gunicorn==23.0.0"]
mysql = ["asyncmy==0.2.9"]
postgres = ["asyncpg==0.29.0"]
sqlite = ["aiosqlite==0.20.0"]
test = [
    "coverage==7.6.1",
    "iniconfig==2.0.0",
    "pytest==8.3.2",
]


[tool.setuptools.packages.find]
where = ["src"]


[tool.setuptools_scm]
version_file = "src/app/__version__.py"
local_scheme = "no-local-version"


[tool.coverage.run]
omit = ["tests/*", "venv/*", "__version__.py"]


[tool.isort]
profile = "black"
skip_glob = ["**/migrations"]

[tool.black]
line-length = 88
extend-exclude = "migrations/*"


[tool.bandit]
exclude_dirs = [
    "./.eggs",
    "./.git",
    "./.tox",
    "./build",
    "./coverage",
    "./dist",
    "./venv",
    "./__pycache__",
    "*tests*",
]


[tool.mypy]
exclude = """
^.*\b(migrations)\b.*$
"""
ignore_missing_imports = true
